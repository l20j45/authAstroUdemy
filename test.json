{
    cookies: AstroCookies {},
    routePattern: '/',
    isPrerendered: false,
    clientAddress: [Getter],
    currentLocale: [Getter],
    generator: 'Astro v5.1.1',
    locals: [Getter/Setter],
    params: {},
    preferredLocale: [Getter],
    preferredLocaleList: [Getter],
    rewrite: [AsyncFunction: rewrite],
    request: Request {
      method: 'GET',
      url: 'http://localhost:4321/',
      headers: Headers {
        host: 'localhost:4321',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        'sec-ch-ua': '"Not(A:Brand";v="99", "Google Chrome";v="133", "Chromium";v="133"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
        'accept-language': 'es-ES,es;q=0.9',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-dest': 'document',
        referer: 'http://localhost:4321/',
        'accept-encoding': 'gzip, deflate, br, zstd',
        cookie: 'Phpstorm-41c4b9ea=85a38149-4be0-4e1e-8fc6-82eb9725994a; Webstorm-37951e8e=b906f1ac-1ec4-455c-8afe-56d58291d38b; _gcl_au=1.1.1416217445.1733343267; _ga=GA1.1.1496762959.1733343267; _ga_6XWLVWD987=GS1.1.1733343266.1.1.1733348395.3.0.1535536835; _ga_Y0GP63MY97=GS1.1.1733343267.1.1.1733348395.0.0.0; _ga_0Q2JL4S2BT=GS1.1.1733343267.1.1.1733348395.0.0.0'
      },
      destination: '',
      referrer: 'about:client',
      referrerPolicy: '',
      mode: 'cors',
      credentials: 'same-origin',
      cache: 'default',
      redirect: 'follow',
      integrity: '',
      keepalive: false,
      isReloadNavigation: false,
      isHistoryNavigation: false,
      signal: AbortSignal { aborted: false }
    },
    site: undefined,
    url: URL {
      href: 'http://localhost:4321/',
      origin: 'http://localhost:4321',
      protocol: 'http:',
      username: '',
      password: '',
      host: 'localhost:4321',
      hostname: 'localhost',
      port: '4321',
      pathname: '/',
      search: '',
      searchParams: URLSearchParams {},
      hash: ''
    },
    originPathname: [Getter],
    session: undefined,
    props: {},
    redirect: [Function: redirect],
    getActionResult: [Function (anonymous)],
    callAction: [Function (anonymous)],
    [Symbol(context.routes)]: DevPipeline {
      internalMiddleware: [ [Function (anonymous)] ],
      resolvedMiddleware: [Function (anonymous)],
      logger: Logger { options: [Object] },
      manifest: {
        hrefRoot: 'file:///D:/cursos/2024/Astro/astroUdemy/mio/authFinal/',
        trailingSlash: 'ignore',
        buildFormat: 'directory',
        compressHTML: true,
        assets: Set(0) {},
        entryModules: {},
        routes: [],
        adapterName: '',
        clientDirectives: [Map],
        renderers: [],
        base: '/',
        assetsPrefix: undefined,
        site: undefined,
        componentMetadata: Map(0) {},
        inlinedScripts: Map(0) {},
        i18n: undefined,
        checkOrigin: true,
        key: [Promise],
        middleware: [Function: middleware],
        sessionConfig: undefined,
        serverIslandMap: Map(0) {},
        serverIslandNameMap: Map(0) {}
      },
      runtimeMode: 'development',
      renderers: [],
      resolve: [AsyncFunction (anonymous)],
      serverLike: true,
      streaming: true,
      adapterName: '',
      clientDirectives: Map(5) {
        'idle' => '(()=>{var l=(n,t)=>{let i=async()=>{await(await n())()},e=typeof t.value=="object"?t.value:void 0,s={timeout:e==null?void 0:e.timeout};"requestIdleCallback"in window?window.requestIdleCallback(i,s):setTimeout(i,s.timeout||200)};(self.Astro||(self.Astro={})).idle=l;window.dispatchEvent(new Event("astro:idle"));})();',
        'load' => '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).load=e;window.dispatchEvent(new Event("astro:load"));})();',
        'media' => '(()=>{var n=(a,t)=>{let i=async()=>{await(await a())()};if(t.value){let e=matchMedia(t.value);e.matches?i():e.addEventListener("change",i,{once:!0})}};(self.Astro||(self.Astro={})).media=n;window.dispatchEvent(new Event("astro:media"));})();',
        'only' => '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).only=e;window.dispatchEvent(new Event("astro:only"));})();',
        'visible' => '(()=>{var a=(s,i,o)=>{let r=async()=>{await(await s())()},t=typeof i.value=="object"?i.value:void 0,c={rootMargin:t==null?void 0:t.rootMargin},n=new IntersectionObserver(e=>{for(let l of e)if(l.isIntersecting){n.disconnect(),r();break}},c);for(let e of o.children)n.observe(e)};(self.Astro||(self.Astro={})).visible=a;window.dispatchEvent(new Event("astro:visible"));})();'
      },
      inlinedScripts: Map(0) {},
      compressHTML: true,
      i18n: undefined,
      middleware: [Function: middleware],
      routeCache: RouteCache {
        logger: [Logger],
        cache: {},
        runtimeMode: 'development'
      },
      site: undefined,
      defaultRoutes: [ [Object], [Object] ],
      manifestData: { routes: [Array] },
      componentInterner: WeakMap { <items unknown> },
      loader: {
        import: [Function: import],
        resolveId: [AsyncFunction: resolveId],
        getModuleById: [Function: getModuleById],
        getModulesByFile: [Function: getModulesByFile],
        getModuleInfo: [Function: getModuleInfo],
        eachModule: [Function: eachModule],
        invalidateModule: [Function: invalidateModule],
        fixStacktrace: [Function: fixStacktrace],
        clientReload: [Function: clientReload],
        webSocketSend: [Function: webSocketSend],
        isHttps: [Function: isHttps],
        events: [EventEmitter]
      },
      settings: {
        config: [Object],
        preferences: [Object],
        tsConfig: [Object],
        tsConfigPath: 'D:\\cursos\\2024\\Astro\\astroUdemy\\mio\\authFinal\\tsconfig.json',
        adapter: [Object],
        injectedRoutes: [],
        resolvedInjectedRoutes: [],
        serverIslandMap: Map(0) {},
        serverIslandNameMap: Map(0) {},
        pageExtensions: [Array],
        contentEntryTypes: [Array],
        dataEntryTypes: [Array],
        renderers: [],
        scripts: [Array],
        clientDirectives: [Map],
        middlewares: [Object],
        watchFiles: [Array],
        devToolbarApps: [],
        timer: [AstroTimer],
        dotAstroDir: URL {},
        latestAstroVersion: undefined,
        injectedTypes: [Array],
        buildOutput: 'server'
      },
      config: {
        root: URL {},
        srcDir: URL {},
        publicDir: URL {},
        outDir: URL {},
        cacheDir: URL {},
        compressHTML: true,
        base: '/',
        trailingSlash: 'ignore',
        output: 'server',
        scopedStyleStrategy: 'attribute',
        adapter: [Object],
        integrations: [Array],
        build: [Object],
        server: [Object],
        redirects: {},
        image: [Object],
        devToolbar: [Object],
        markdown: [Object],
        vite: [Object],
        security: [Object],
        env: [Object],
        experimental: [Object],
        legacy: [Object]
      }
    }
  }